{"version":3,"file":"SidebarChild.js","sourceRoot":"","sources":["../../../../../src/client/modules/sidebar/components/SidebarChild.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAEnD,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE3C,OAAO,QAAQ,MAAM,iCAAiC,CAAC;AACvD,OAAO,QAAQ,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,yCAAyC,CAAC;AAK9E,OAAO,8BAA8B,CAAC;AAEtC,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,cAAc;IAEpB,KAAK,EAAE;QACL;;;;WAIG;QACH,MAAM,EAAE;YACN,IAAI,EAAE,MAA2C;YACjD,QAAQ,EAAE,IAAI;SACf;KACF;IAED,KAAK,CAAC,KAAK;QACT,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;QAEzB,OAAO,GAAU,EAAE,CACjB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACzB,CAAC,CAAC,kDAAkD;gBAClD,CAAC,CAAC,QAAQ,EAAE;oBACV,KAAK,EAAE;wBACL,iBAAiB;wBACjB,iBAAiB;wBACjB,EAAE,MAAM,EAAE,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;qBAC3D;oBACD,KAAK,EAAE,IAAI;oBACX,MAAM,EAAE,KAAK,CAAC,MAAsB;iBACrC,CAAC;YACJ,CAAC,CAAC,gDAAgD;gBAChD,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE;oBACZ,CAAC,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBACxC,KAAK,CAAC,MAAM,CAAC,IAAI;iBAClB,CAAC,CAAC;IACX,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { isString } from \"@vuepress/helper/client\";\nimport type { PropType, VNode } from \"vue\";\nimport { defineComponent, h } from \"vue\";\nimport { useRoute } from \"vuepress/client\";\n\nimport AutoLink from \"@theme-hope/components/AutoLink\";\nimport HopeIcon from \"@theme-hope/components/HopeIcon\";\nimport { isActiveSidebarItem } from \"@theme-hope/modules/sidebar/utils/index\";\n\nimport type { AutoLinkOptions as AutoLinkType } from \"../../../../shared/index.js\";\nimport type { ResolvedSidebarPageItem } from \"../utils/index.js\";\n\nimport \"../styles/sidebar-child.scss\";\n\nexport default defineComponent({\n  name: \"SidebarChild\",\n\n  props: {\n    /**\n     * Sidebar item config\n     *\n     * 侧边栏项目配置\n     */\n    config: {\n      type: Object as PropType<ResolvedSidebarPageItem>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const route = useRoute();\n\n    return (): VNode =>\n      isString(props.config.link)\n        ? // If the item has link, render it as `<AutoLink>`\n          h(AutoLink, {\n            class: [\n              \"vp-sidebar-link\",\n              `vp-sidebar-page`,\n              { active: isActiveSidebarItem(route, props.config, true) },\n            ],\n            exact: true,\n            config: props.config as AutoLinkType,\n          })\n        : // If the item only has text, render it as `<p>`\n          h(\"p\", props, [\n            h(HopeIcon, { icon: props.config.icon }),\n            props.config.text,\n          ]);\n  },\n});\n"]}
{"version":3,"file":"useNavbarItems.js","sourceRoot":"","sources":["../../../../../src/client/modules/navbar/composables/useNavbarItems.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AACnE,OAAO,EACL,cAAc,EACd,eAAe,EACf,aAAa,GACd,MAAM,yBAAyB,CAAC;AASjC,OAAO,EAAE,QAAQ,EAAoB,MAAM,KAAK,CAAC;AAEjD,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,IAAuC,EACvC,MAAM,GAAG,EAAE,EACc,EAAE;IAC3B,IAAI,QAAQ,CAAC,IAAI,CAAC;QAAE,OAAO,eAAe,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAExE,IAAI,UAAU,IAAI,IAAI;QACpB,OAAO;YACL,GAAG,IAAI;YACP,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;gBACxC,CAAC,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;gBAC/D,CAAC,CAAC,EAAE,CAAC;YACP,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CACzB,CAAC,KAAK,EAAE,EAAE,CACR,iBAAiB,CAAC,KAAK,EAAE,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAExC,CACtB;SACF,CAAC;IAEJ,OAAO;QACL,GAAG,IAAI;QACP,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;YACrD,CAAC,CAAC,IAAI,CAAC,IAAI;KACd,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,GAA2C,EAAE;IACzE,MAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAE7C,OAAO,QAAQ,CAAC,GAAG,EAAE,CACnB,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAC5E,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { isString } from \"@vuepress/helper/client\";\nimport { resolveRoute } from \"vuepress/client\";\n\nimport { useThemeLocaleData } from \"@theme-hope/composables/index\";\nimport {\n  isLinkInternal,\n  resolveLinkInfo,\n  resolvePrefix,\n} from \"@theme-hope/utils/index\";\n\nimport type {\n  AutoLinkOptions,\n  NavGroup,\n  NavbarGroup,\n  NavbarItem,\n} from \"../../../../shared/index.js\";\nimport type { ResolvedThemeNavbarItem } from \"../utils/index.js\";\nimport { computed, type ComputedRef } from \"vue\";\n\nexport const resolveNavbarItem = (\n  item: NavbarItem | NavbarGroup | string,\n  prefix = \"\",\n): ResolvedThemeNavbarItem => {\n  if (isString(item)) return resolveLinkInfo(resolvePrefix(prefix, item));\n\n  if (\"children\" in item)\n    return {\n      ...item,\n      ...(item.link && isLinkInternal(item.link)\n        ? { link: resolveRoute(resolvePrefix(prefix, item.link)).path }\n        : {}),\n      children: item.children.map(\n        (child) =>\n          resolveNavbarItem(child, resolvePrefix(prefix, item.prefix)) as\n            | NavGroup<AutoLinkOptions>\n            | AutoLinkOptions,\n      ),\n    };\n\n  return {\n    ...item,\n    link: isLinkInternal(item.link)\n      ? resolveRoute(resolvePrefix(prefix, item.link)).path\n      : item.link,\n  };\n};\n\nexport const useNavbarItems = (): ComputedRef<ResolvedThemeNavbarItem[]> => {\n  const themeLocaleData = useThemeLocaleData();\n\n  return computed(() =>\n    (themeLocaleData.value.navbar || []).map((item) => resolveNavbarItem(item)),\n  );\n};\n"]}
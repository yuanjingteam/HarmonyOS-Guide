{"version":3,"file":"Navbar.js","sourceRoot":"","sources":["../../../../../src/client/modules/navbar/components/Navbar.ts"],"names":[],"mappings":"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","sourcesContent":["import { hasGlobalComponent } from \"@vuepress/helper/client\";\nimport noopComponent from \"@vuepress/helper/noopComponent\";\nimport type {\n  Component,\n  ComponentOptions,\n  FunctionalComponent,\n  SlotsType,\n  VNode,\n} from \"vue\";\nimport { computed, defineComponent, h, ref, resolveComponent } from \"vue\";\n\nimport {\n  useThemeLocaleData,\n  useWindowSize,\n} from \"@theme-hope/composables/index\";\nimport LanguageDropdown from \"@theme-hope/modules/navbar/components/LanguageDropdown\";\nimport NavScreen from \"@theme-hope/modules/navbar/components/NavScreen\";\nimport NavbarBrand from \"@theme-hope/modules/navbar/components/NavbarBrand\";\nimport NavbarLinks from \"@theme-hope/modules/navbar/components/NavbarLinks\";\nimport RepoLink from \"@theme-hope/modules/navbar/components/RepoLink\";\nimport ToggleNavbarButton from \"@theme-hope/modules/navbar/components/ToggleNavbarButton\";\nimport ToggleSidebarButton from \"@theme-hope/modules/navbar/components/ToggleSidebarButton\";\nimport OutlookButton from \"@theme-hope/modules/outlook/components/OutlookButton\";\n\nimport type { NavbarLayoutOptions } from \"../../../../shared/index.js\";\n\nimport \"../styles/navbar.scss\";\n\ndeclare const __VP_MULTI_LANGUAGES__: boolean;\n\nexport default defineComponent({\n  name: \"NavBar\",\n\n  emits: [\"toggleSidebar\"],\n\n  slots: Object as SlotsType<{\n    default: () => VNode[] | VNode | null;\n\n    // Navbar\n    startBefore?: () => VNode[] | VNode | null;\n    startAfter?: () => VNode[] | VNode | null;\n    centerBefore?: () => VNode[] | VNode | null;\n    centerAfter?: () => VNode[] | VNode | null;\n    endBefore?: () => VNode[] | VNode | null;\n    endAfter?: () => VNode[] | VNode | null;\n    screenTop?: () => VNode[] | VNode | null;\n    screenBottom?: () => VNode[] | VNode | null;\n  }>,\n\n  setup(_props, { emit, slots }) {\n    const themeLocale = useThemeLocaleData();\n    const { isMobile } = useWindowSize();\n\n    const showScreen = ref(false);\n\n    const autoHide = computed(() => {\n      const { navbarAutoHide = \"mobile\" } = themeLocale.value;\n\n      return (\n        navbarAutoHide !== \"none\" &&\n        (navbarAutoHide === \"always\" || isMobile.value)\n      );\n    });\n\n    const navbarLayout = computed(\n      () =>\n        themeLocale.value.navbarLayout ??\n        ({\n          start: [\"Brand\"],\n          center: [\"Links\"],\n          end: [\"Language\", \"Repo\", \"Outlook\", \"Search\"],\n        } as NavbarLayoutOptions),\n    );\n\n    const navbarComponentMap: Record<string, Component | string> = {\n      Brand: NavbarBrand,\n      Language: __VP_MULTI_LANGUAGES__ ? LanguageDropdown : noopComponent,\n      Links: NavbarLinks,\n      Repo: RepoLink,\n      Outlook: OutlookButton,\n      Search: hasGlobalComponent(\"Docsearch\")\n        ? resolveComponent(\"Docsearch\")\n        : hasGlobalComponent(\"SearchBox\")\n          ? resolveComponent(\"SearchBox\")\n          : noopComponent,\n    };\n\n    const getNavbarComponent = (component: string): Component | string =>\n      navbarComponentMap[component] ??\n      (hasGlobalComponent(component)\n        ? resolveComponent(component)\n        : noopComponent);\n\n    return (): VNode[] => [\n      h(\n        \"header\",\n        {\n          key: \"navbar\",\n          id: \"navbar\",\n          class: [\"vp-navbar\", { \"auto-hide\": autoHide.value }],\n        },\n        [\n          h(\"div\", { class: \"vp-navbar-start\" }, [\n            h(ToggleSidebarButton, {\n              onToggle: () => {\n                if (showScreen.value) showScreen.value = false;\n                emit(\"toggleSidebar\");\n              },\n            }),\n            slots.startBefore?.(),\n            navbarLayout.value.start?.map((item) =>\n              h(\n                getNavbarComponent(item) as\n                  | ComponentOptions\n                  | FunctionalComponent,\n              ),\n            ),\n            slots.startAfter?.(),\n          ]),\n\n          h(\"div\", { class: \"vp-navbar-center\" }, [\n            slots.centerBefore?.(),\n            navbarLayout.value.center?.map((item) =>\n              h(\n                getNavbarComponent(item) as\n                  | ComponentOptions\n                  | FunctionalComponent,\n              ),\n            ),\n            slots.centerAfter?.(),\n          ]),\n\n          h(\"div\", { class: \"vp-navbar-end\" }, [\n            slots.endBefore?.(),\n            navbarLayout.value.end?.map((item) =>\n              h(\n                getNavbarComponent(item) as\n                  | ComponentOptions\n                  | FunctionalComponent,\n              ),\n            ),\n            slots.endAfter?.(),\n\n            h(ToggleNavbarButton, {\n              active: showScreen.value,\n              onToggle: () => {\n                showScreen.value = !showScreen.value;\n              },\n            }),\n          ]),\n        ],\n      ),\n      h(\n        NavScreen,\n        {\n          show: showScreen.value,\n          onClose: () => {\n            showScreen.value = false;\n          },\n        },\n        {\n          before: slots.screenTop\n            ? (): VNode | VNode[] | null => slots.screenTop!()\n            : null,\n          after: slots.screenBottom\n            ? (): VNode | VNode[] | null => slots.screenBottom!()\n            : null,\n        },\n      ),\n    ];\n  },\n});\n"]}
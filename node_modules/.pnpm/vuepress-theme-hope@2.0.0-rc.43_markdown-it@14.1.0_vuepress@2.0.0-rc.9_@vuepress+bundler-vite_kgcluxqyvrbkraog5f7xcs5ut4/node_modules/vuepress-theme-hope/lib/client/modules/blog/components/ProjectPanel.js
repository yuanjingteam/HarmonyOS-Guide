import { isLinkAbsolute, isLinkHttp } from "@vuepress/helper/client";
import { defineComponent, h, resolveComponent } from "vue";
import { withBase } from "vuepress/client";
import { generateIndexFromHash } from "vuepress-shared/client";
import HopeIcon from "@theme-hope/components/HopeIcon";
import { useNavigate, usePure } from "@theme-hope/composables/index";
import { ArticleIcon, BookIcon, FriendIcon, LinkIcon, ProjectIcon, } from "@theme-hope/modules/blog/components/icons/index";
import cssVariables from "../../../styles/variables.module.scss?module";
import "../styles/project-panel.scss";
const AVAILABLE_PROJECT_TYPES = [
    "link",
    "article",
    "book",
    "project",
    "friend",
];
export default defineComponent({
    name: "ProjectPanel",
    components: { ArticleIcon, BookIcon, FriendIcon, LinkIcon, ProjectIcon },
    props: {
        /** 项目列表 */
        items: {
            type: Array,
            required: true,
        },
    },
    setup(props) {
        const isPure = usePure();
        const navigate = useNavigate();
        const renderIcon = (icon = "", alt = "icon") => {
            // Built in icon
            if (AVAILABLE_PROJECT_TYPES.includes(icon))
                return h(resolveComponent(`${icon}-icon`));
            // It’s a full image link
            if (isLinkHttp(icon))
                return h("img", { class: "vp-project-image", src: icon, alt });
            // It’s an absolute image link
            if (isLinkAbsolute(icon))
                return h("img", {
                    class: "vp-project-image",
                    src: withBase(icon),
                    alt,
                });
            // Render as icon font
            return h(HopeIcon, { icon });
        };
        return () => h("div", { class: "vp-project-panel" }, props.items.map(({ icon, link, name, desc, background }) => h("div", {
            class: [
                "vp-project-card",
                {
                    [`color${generateIndexFromHash(name, Number(cssVariables["colorNumber"]))}`]: !isPure.value && !background,
                },
            ],
            ...(background ? { style: background } : {}),
            onClick: () => navigate(link),
        }, [
            renderIcon(icon, name),
            h("div", { class: "vp-project-name" }, name),
            h("div", { class: "vp-project-desc" }, desc),
        ])));
    },
});
//# sourceMappingURL=ProjectPanel.js.map
{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/plugin.ts"],"sourcesContent":["export const escapeHtml = (unsafeHTML: string): string =>\n  unsafeHTML\n    .replace(/&/gu, \"&amp;\")\n    .replace(/</gu, \"&lt;\")\n    .replace(/>/gu, \"&gt;\")\n    .replace(/\"/gu, \"&quot;\")\n    .replace(/'/gu, \"&#039;\");\n","/* eslint-disable @typescript-eslint/consistent-type-imports */\nimport { createRequire } from \"node:module\";\n\nimport { tex } from \"@mdit/plugin-tex\";\nimport type { KatexOptions as OriginalKatexOptions } from \"katex\";\nimport type MarkdownIt from \"markdown-it\";\n\nimport type { KatexToken, MarkdownItKatexOptions } from \"./options.js\";\nimport { escapeHtml } from \"./utils.js\";\n\nconst require = createRequire(import.meta.url);\n\nlet isKatexInstalled = true;\nlet katexLib: typeof import(\"katex\");\n\ntry {\n  katexLib = (await import(\"katex\"))\n    .default as unknown as typeof import(\"katex\");\n} catch (err) {\n  isKatexInstalled = false;\n}\n\nconst katexInline = (\n  tex: string,\n  options: OriginalKatexOptions,\n  vPre: boolean,\n): string => {\n  try {\n    const result = katexLib.renderToString(tex, {\n      ...options,\n      displayMode: false,\n    });\n\n    return vPre\n      ? result.replace(/ class=\"katex\"/g, ' v-pre class=\"katex\"')\n      : result;\n  } catch (error) {\n    if (options.throwOnError) console.warn(error);\n\n    return `<span ${\n      vPre ? \"v-pre \" : \"\"\n    }class='katex-error' title='${escapeHtml(\n      (error as Error).toString(),\n    )}'>${escapeHtml(tex)}</span>`;\n  }\n};\n\nconst katexBlock = (\n  tex: string,\n  options: OriginalKatexOptions,\n  vPre: boolean,\n): string => {\n  try {\n    return `<p ${vPre ? \"v-pre \" : \"\"}class='katex-block'>${katexLib.renderToString(\n      tex,\n      {\n        ...options,\n        displayMode: true,\n      },\n    )}</p>\\n`;\n  } catch (error) {\n    if (options.throwOnError) console.warn(error);\n\n    return `<p ${\n      vPre ? \"v-pre \" : \"\"\n    }class='katex-block katex-error' title='${escapeHtml(\n      (error as Error).toString(),\n    )}'>${escapeHtml(tex)}</p>\\n`;\n  }\n};\n\nexport const katex = <MarkdownItEnv = unknown>(\n  md: MarkdownIt,\n  options: MarkdownItKatexOptions<MarkdownItEnv> = {},\n): void => {\n  if (!isKatexInstalled) {\n    console.error('[@mdit/plugin-katex]: \"katex\" not installed!');\n\n    return;\n  }\n\n  const {\n    allowInlineWithSpace = false,\n    mathFence = false,\n    mhchem = false,\n    logger = (errorCode: string): string =>\n      errorCode === \"newLineInDisplayMode\" ? \"ignore\" : \"warn\",\n    vPre = false,\n    ...userOptions\n  } = options;\n\n  if (mhchem) require(\"katex/contrib/mhchem\");\n\n  md.use(tex, {\n    allowInlineWithSpace,\n    mathFence,\n    render: (content: string, displayMode: boolean, env: MarkdownItEnv) => {\n      const katexOptions = {\n        strict: (\n          errorCode:\n            | \"unknownSymbol\"\n            | \"unicodeTextInMathMode\"\n            | \"mathVsTextUnits\"\n            | \"commentAtEnd\"\n            | \"htmlExtension\"\n            | \"newLineInDisplayMode\",\n          errorMsg: string,\n          token: KatexToken,\n        ): string => logger(errorCode, errorMsg, token, env) ?? \"ignore\",\n        throwOnError: false,\n        ...userOptions,\n      };\n\n      return displayMode\n        ? katexBlock(content, katexOptions, vPre)\n        : katexInline(content, katexOptions, vPre);\n    },\n  });\n};\n"],"names":["escapeHtml","unsafeHTML","require","createRequire","isKatexInstalled","katexLib","katexInline","tex","options","vPre","result","error","katexBlock","katex","md","allowInlineWithSpace","mathFence","mhchem","logger","errorCode","userOptions","content","displayMode","env","katexOptions","errorMsg","token"],"mappings":"mFAAa,MAAAA,EAAcC,GACzBA,EACG,QAAQ,MAAO,OAAO,EACtB,QAAQ,MAAO,MAAM,EACrB,QAAQ,MAAO,MAAM,EACrB,QAAQ,MAAO,QAAQ,EACvB,QAAQ,MAAO,QAAQ,ECItBC,EAAUC,EAAc,YAAY,GAAG,EAE7C,IAAIC,EAAmB,GACnBC,EAEJ,GAAI,CACFA,GAAY,KAAa,QAAA,OAAO,GAC7B,OACL,MAAc,CACZD,EAAmB,EACrB,CAEA,MAAME,EAAc,CAClBC,EACAC,EACAC,IACW,CACX,GAAI,CACF,MAAMC,EAASL,EAAS,eAAeE,EAAK,CAC1C,GAAGC,EACH,YAAa,EACf,CAAC,EAED,OAAOC,EACHC,EAAO,QAAQ,kBAAmB,sBAAsB,EACxDA,CACN,OAASC,EAAO,CACd,OAAIH,EAAQ,cAAc,QAAQ,KAAKG,CAAK,EAErC,SACLF,EAAO,SAAW,EACpB,8BAA8BT,EAC3BW,EAAgB,SACnB,CAAA,CAAC,KAAKX,EAAWO,CAAG,CAAC,SACvB,CACF,EAEMK,EAAa,CACjBL,EACAC,EACAC,IACW,CACX,GAAI,CACF,MAAO,MAAMA,EAAO,SAAW,EAAE,uBAAuBJ,EAAS,eAC/DE,EACA,CACE,GAAGC,EACH,YAAa,EACf,CACF,CAAC;AAAA,CACH,OAASG,EAAO,CACd,OAAIH,EAAQ,cAAc,QAAQ,KAAKG,CAAK,EAErC,MACLF,EAAO,SAAW,EACpB,0CAA0CT,EACvCW,EAAgB,SACnB,CAAA,CAAC,KAAKX,EAAWO,CAAG,CAAC;AAAA,CACvB,CACF,EAEaM,EAAQ,CACnBC,EACAN,EAAiD,CACxC,IAAA,CACT,GAAI,CAACJ,EAAkB,CACrB,QAAQ,MAAM,8CAA8C,EAE5D,MACF,CAEA,KAAM,CACJ,qBAAAW,EAAuB,GACvB,UAAAC,EAAY,GACZ,OAAAC,EAAS,GACT,OAAAC,EAAUC,GACRA,IAAc,uBAAyB,SAAW,OACpD,KAAAV,EAAO,GACP,GAAGW,CACL,EAAIZ,EAEAS,GAAQf,EAAQ,sBAAsB,EAE1CY,EAAG,IAAIP,EAAK,CACV,qBAAAQ,EACA,UAAAC,EACA,OAAQ,CAACK,EAAiBC,EAAsBC,IAAuB,CACrE,MAAMC,EAAe,CACnB,OAAQ,CACNL,EAOAM,EACAC,IACWR,EAAOC,EAAWM,EAAUC,EAAOH,CAAG,GAAK,SACxD,aAAc,GACd,GAAGH,CACL,EAEA,OAAOE,EACHV,EAAWS,EAASG,EAAcf,CAAI,EACtCH,EAAYe,EAASG,EAAcf,CAAI,CAC7C,CACF,CAAC,CACH"}
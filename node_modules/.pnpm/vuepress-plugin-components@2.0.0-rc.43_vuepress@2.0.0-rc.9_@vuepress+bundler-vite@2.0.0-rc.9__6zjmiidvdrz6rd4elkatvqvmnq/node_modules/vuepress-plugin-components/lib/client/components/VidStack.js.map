{"version":3,"file":"VidStack.js","sources":["../../../src/client/components/VidStack.ts"],"sourcesContent":["import { isArray, isString, useLocaleConfig } from \"@vuepress/helper/client\";\nimport type {\n  DASHNamespaceLoader,\n  DefaultLayoutProps,\n  HLSConstructorLoader,\n  PlayerSrc,\n  TextTrackInit,\n} from \"vidstack\";\nimport type { MediaPlayerElement } from \"vidstack/elements\";\nimport type { VidstackPlayerConfig } from \"vidstack/global/player\";\nimport { VidstackPlayer, VidstackPlayerLayout } from \"vidstack/global/player\";\nimport type { PropType, VNode } from \"vue\";\nimport { defineComponent, h, onBeforeUnmount, onMounted, ref } from \"vue\";\n\nimport type { VidstackLocaleConfig } from \"../../shared/index.js\";\nimport { getLink } from \"../utils/getLink.js\";\n\nimport \"vidstack/player/styles/default/theme.css\";\nimport \"vidstack/player/styles/default/layouts/audio.css\";\nimport \"vidstack/player/styles/default/layouts/video.css\";\nimport \"../styles/vidstack.scss\";\n\ndeclare const DASHJS_INSTALLED: boolean;\ndeclare const HLS_JS_INSTALLED: boolean;\ndeclare const VIDSTACK_LOCALES: VidstackLocaleConfig;\n\nexport default defineComponent({\n  name: \"VidStack\",\n\n  props: {\n    /**\n     * sources\n     */\n    src: {\n      type: [String, Array, Object] as PropType<PlayerSrc>,\n      required: true,\n    },\n\n    /**\n     * tracks\n     */\n    tracks: { type: Array as PropType<TextTrackInit[]>, default: () => [] },\n\n    /**\n     * poster\n     */\n    poster: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * thumbnails\n     */\n    thumbnails: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * title\n     */\n    title: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * VidStack player options\n     */\n    player: {\n      type: Object as PropType<\n        Omit<\n          VidstackPlayerConfig,\n          \"target\" | \"src\" | \"sources\" | \"tracks\" | \"title\" | \"poster\"\n        >\n      >,\n\n      default: () => ({}),\n    },\n\n    /**\n     * VidStack layout options\n     */\n    layout: {\n      type: Object as PropType<Partial<DefaultLayoutProps>>,\n      default: () => ({}),\n    },\n\n    /**\n     * Darkmode\n     */\n    darkmode: Boolean,\n  },\n\n  setup(props) {\n    const vidstack = ref<HTMLElement>();\n    const locale = useLocaleConfig(VIDSTACK_LOCALES);\n\n    let player: MediaPlayerElement | null = null;\n\n    onMounted(async () => {\n      const options: VidstackPlayerConfig = {\n        target: vidstack.value!,\n        crossOrigin: true,\n        poster: props.poster,\n        title: props.title,\n        ...props.player,\n        layout: new VidstackPlayerLayout({\n          colorScheme: props.darkmode ? \"dark\" : \"light\",\n          thumbnails: props.thumbnails,\n          translations: locale.value,\n          ...props.layout,\n        }),\n      };\n\n      options.src = isString(props.src)\n        ? getLink(props.src)\n        : isArray(props.src)\n          ? props.src.map((src) => (isString(src) ? getLink(src) : src))\n          : props.src;\n\n      if (props.tracks.length) options.tracks = props.tracks;\n\n      player = await VidstackPlayer.create(options);\n\n      player.addEventListener(\"provider-change\", () => {\n        if (player!.provider?.type === \"hls\" && HLS_JS_INSTALLED)\n          player!.provider.library = (() =>\n            import(\n              /* webpackChunkName: \"hls\" */ \"hls.js/dist/hls.min.js\"\n            )) as HLSConstructorLoader;\n        else if (player!.provider?.type === \"dash\" && DASHJS_INSTALLED)\n          player!.provider.library = (() =>\n            import(\n              /* webpackChunkName: \"dashjs\" */ \"dashjs\"\n            )) as DASHNamespaceLoader;\n      });\n    });\n\n    onBeforeUnmount(() => {\n      player?.destroy();\n    });\n\n    return (): VNode => h(\"div\", { ref: vidstack });\n  },\n});\n"],"names":["VidStack","defineComponent","props","vidstack","ref","locale","useLocaleConfig","player","onMounted","options","VidstackPlayerLayout","isString","getLink","isArray","src","VidstackPlayer","onBeforeUnmount","h"],"mappings":"ugBA0BA,IAAAA,EAAeC,EAAgB,CAC7B,KAAM,WAEN,MAAO,CAIL,IAAK,CACH,KAAM,CAAC,OAAQ,MAAO,MAAM,EAC5B,SAAU,EACZ,EAKA,OAAQ,CAAE,KAAM,MAAoC,QAAS,IAAM,CAAA,CAAG,EAKtE,OAAQ,CACN,KAAM,OACN,QAAS,EACX,EAKA,WAAY,CACV,KAAM,OACN,QAAS,EACX,EAKA,MAAO,CACL,KAAM,OACN,QAAS,EACX,EAKA,OAAQ,CACN,KAAM,OAON,QAAS,KAAO,CAAA,EAClB,EAKA,OAAQ,CACN,KAAM,OACN,QAAS,KAAO,GAClB,EAKA,SAAU,OACZ,EAEA,MAAMC,EAAO,CACX,MAAMC,EAAWC,EACXC,EAAAA,EAASC,EAAgB,gBAAgB,EAE/C,IAAIC,EAAoC,KAExC,OAAAC,EAAU,SAAY,CACpB,MAAMC,EAAgC,CACpC,OAAQN,EAAS,MACjB,YAAa,GACb,OAAQD,EAAM,OACd,MAAOA,EAAM,MACb,GAAGA,EAAM,OACT,OAAQ,IAAIQ,EAAqB,CAC/B,YAAaR,EAAM,SAAW,OAAS,QACvC,WAAYA,EAAM,WAClB,aAAcG,EAAO,MACrB,GAAGH,EAAM,MACX,CAAC,CACH,EAEAO,EAAQ,IAAME,EAAST,EAAM,GAAG,EAC5BU,EAAQV,EAAM,GAAG,EACjBW,EAAQX,EAAM,GAAG,EACfA,EAAM,IAAI,IAAKY,GAASH,EAASG,CAAG,EAAIF,EAAQE,CAAG,EAAIA,CAAI,EAC3DZ,EAAM,IAERA,EAAM,OAAO,SAAQO,EAAQ,OAASP,EAAM,QAEhDK,EAAS,MAAMQ,EAAe,OAAON,CAAO,EAE5CF,EAAO,iBAAiB,kBAAmB,IAAM,CAC3CA,EAAQ,UAAU,OAAS,OAAS,iBACtCA,EAAQ,SAAS,QAAW,IAC1B,OACgC,wBAChC,EACKA,EAAQ,UAAU,OAAS,QAAU,mBAC5CA,EAAQ,SAAS,QAAW,IAC1B,OACmC,QACnC,EACN,CAAC,CACH,CAAC,EAEDS,EAAgB,IAAM,CACpBT,GAAQ,QAAQ,CAClB,CAAC,EAEM,IAAaU,EAAE,MAAO,CAAE,IAAKd,CAAS,CAAC,CAChD,CACF,CAAC"}